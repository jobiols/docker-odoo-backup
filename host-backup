#!/bin/bash
readonly RED="\e[31m"
readonly YELLOW="\e[33m"
readonly GREEN="\e[32m"
readonly STD="\e[0m"

if [ $# -lt 2 ]
  then
    echo -e "${RED}Error! Too few arguments supplied!${STD}"
    echo -e "${STD}Command: jd-backup <customer> <db>"
    echo -e "${STD}--- or ---"
    echo -e "${STD}Command: jd-backup -c <configfile>"
    exit 1
fi

HASERROR=0

if [ "$1" = "-c" ]
  then 
    declare -A conf

    IFS="="
    while read -r name value
      do
        CUSTOMER=$(echo "$name" | sed 's/^ *//g' | sed 's/ *$//g')
        DB=$(echo "$value" | sed 's/^ *//g' | sed 's/ *$//g')
        conf["$CUSTOMER"]=$DB
    done < $2
    for KEY in "${!conf[@]}"
      do
        CUSTOMER=$KEY
        DB=${conf["$KEY"]}
        echo -e "${YELLOW}Starting backup for database ${DB} of ${CUSTOMER}...${STD}"
        docker run --rm -ti --volumes-from $CUSTOMER.data -v /jamoshared/backup:/backup \
          --env DBNAME=$DB jamotion/odoo-backup &> /jamoshared/backup/$CUSTOMER.log
        if [ $? -ne 0 ]
          then 
            echo -e "${RED}Backup for ${CUSTOMER} with  ${DB} failed!${STD}"
            HASERROR=1
          else
            echo -e "${GREEN}Backup for ${DB} successful done${STD}"
        fi
    done
    echo -e "{YELLOW}Removing files older than 30 days...${STD}"
    find /jamoshared/backup/ -type f -mtime +30 -exec rm {} \;  
    if [ $? -ne 0 ]
      then
        echo -e "${RED}Removing old files failed!${STD}"
        HASERROR=1
      else
        echo -e "${GREEN}Old files sucessfully removed${STD}"
    fi
  else
    CUSTOMER=$1
    DB=$2

    echo -e "${YELLOW}Starting backup for database ${DB} of ${CUSTOMER}...${STD}"
    docker run --rm -ti --volumes-from $CUSTOMER.data -v /jamoshared/backup:/backup  \
      --env DBNAME=$DB jamotion/odoo-backup &> /jamoshared/backup/$CUSTOMER.log
    if [ $? -ne 0 ]
      then 
        echo -e "${RED}Backup for ${CUSTOMER} with  ${DB} failed!${STD}"
        HASERROR=1
      else
        echo -e "${GREEN}Backup for ${DB} successful done${STD}"
    fi
fi

if [ "$HASERROR" = "1" ]
  then 
    echo -e "${RED}Errors occured on backup process!!!!${STD}"
    exit 2
fi
